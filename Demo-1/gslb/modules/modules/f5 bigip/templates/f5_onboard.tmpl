#!/bin/bash -x

# NOTE: Startup Script is run once / initialization only (Cloud-Init behavior vs. typical re-entrant for Azure Custom Script Extension )
# For 15.1+ and above, Cloud-Init will run the script directly and can remove Azure Custom Script Extension 


mkdir -p  /var/log/cloud /config/cloud /var/config/rest/downloads


LOG_FILE=/var/log/cloud/startup-script.log
[[ ! -f $LOG_FILE ]] && touch $LOG_FILE || { echo "Run Only Once. Exiting"; exit; }
npipe=/tmp/$$.tmp
trap "rm -f $npipe" EXIT
mknod $npipe p
tee <$npipe -a $LOG_FILE /dev/ttyS0 &
exec 1>&-
exec 1>$npipe
exec 2>&1

mkdir -p /config/cloud

#curl -o /config/cloud/do.json -s --fail --retry 60 -m 10 -L https://raw.githubusercontent.com/f5devcentral/terraform-azure-bigip-module/master/config/onboard_do.json
curl -o /config/cloud/do.json -s --fail --retry 60 -m 10 -L https://raw.githubusercontent.com/skenderidis/hook-test/main/gslb-do.json



### write_files:
# Download or Render BIG-IP Runtime Init Config 

cat << 'EOF' > /config/cloud/runtime-init-conf.yaml
---
runtime_parameters:
  - name: USER_NAME
    type: static
    value: ${bigip_username}
EOF

cat << 'EOF' >> /config/cloud/runtime-init-conf.yaml
  - name: ADMIN_PASS
    type: static
    value: ${bigip_password}
EOF


cat << 'EOF' >> /config/cloud/runtime-init-conf.yaml
pre_onboard_enabled:
  - name: provision_rest
    type: inline
    commands:
      - /usr/bin/setdb provision.extramb 500
      - /usr/bin/setdb restjavad.useextramb true
      - /usr/bin/setdb setup.run false
extension_packages:
  install_operations:
    - extensionType: do
      extensionVersion: ${DO_VER}
      extensionUrl: ${DO_URL}
    - extensionType: as3
      extensionVersion: ${AS3_VER}
      extensionUrl: ${AS3_URL}
    - extensionType: ts
      extensionVersion: ${TS_VER}
      extensionUrl: ${TS_URL}
    - extensionType: cf
      extensionVersion: ${CFE_VER}
      extensionUrl: ${CFE_URL}
    - extensionType: fast
      extensionVersion: ${FAST_VER}
      extensionUrl: ${FAST_URL}
extension_services:
  service_operations:
    - extensionType: do
      type: inline
      value: 
        schemaVersion: 1.0.0
        class: Device
        async: true
        label: Onboard BIG-IP
        Common:
          class: Tenant
          mySystem:
            class: System
            hostname: gslb.f5demo.cloud
          myDns:
            class: DNS
            nameServers:
              - 8.8.8.8
              - 169.254.169.253
            search:
              - f5.com
          admin:
            class: User
            userType: regular
            password: ${bigip_password}
            shell: bash
          ${bigip_username}:
            class: User
            userType: regular
            password: '{{{ bigip_password }}}'
            shell: bash
            partitionAccess:
              all-partitions:
                role: admin            
          myNtp:
            class: NTP
            servers:
              - 169.254.169.123
            timezone: UTC
          provisioning:
            class: Provision
            gtm: nominal
            ltm: nominal
          external:
            class: VLAN
            tag: 4093
            mtu: 1500
            interfaces:
              - name: '1.1'
                tagged: false
            cmpHash: dst-ip
          external-selfip:
            class: SelfIp
            address: ${self-ip-ext}/24
            vlan: external
            allowService: none
            trafficGroup: traffic-group-local-only
          default:
            class: Route
            gw: ${gateway}
            network: default
            mtu: 1500
          internal:
            class: VLAN
            tag: 4094
            mtu: 1500
            interfaces:
              - name: '1.2'
                tagged: false
            cmpHash: dst-ip
          internal-selfip:
            class: SelfIp
            address: ${self-ip-int}/24
            vlan: internal
            allowService: default
            trafficGroup: traffic-group-local-only
post_onboard_enabled: []
EOF
# # Download
#PACKAGE_URL='https://cdn.f5.com/product/cloudsolutions/f5-bigip-runtime-init/v1.1.0/dist/f5-bigip-runtime-init-1.1.0-1.gz.run'
#PACKAGE_URL='https://cdn.f5.com/product/cloudsolutions/f5-bigip-runtime-init/v1.2.0/dist/f5-bigip-runtime-init-1.2.0-1.gz.run'
for i in {1..30}; do
    curl -fv --retry 1 --connect-timeout 5 -L ${INIT_URL} -o "/var/config/rest/downloads/f5-bigip-runtime-init.gz.run" && break || sleep 10
done
# Install
bash /var/config/rest/downloads/f5-bigip-runtime-init.gz.run -- '--cloud azure'
# Run
f5-bigip-runtime-init --config-file /config/cloud/runtime-init-conf.yaml
