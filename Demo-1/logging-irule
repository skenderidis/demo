when CLIENT_ACCEPTED {\n    set client_ip [IP::client_addr] \n    set vip [IP::local_addr] \n    set vip_port [TCP::local_port] \n} \nwhen HTTP_REQUEST { \n    set http_host [HTTP::host] \n    set http_path [string range [HTTP::path] 0 400] \n    set http_method [HTTP::method] \n    if { [HTTP::header exists \"User-Agent\"] } { \n        set user_agent [string range [HTTP::header \"User-Agent\"] 0 200] \n    } else  \n    { \n        set user_agent \"Not-Available\" \n    }   \n    if { [HTTP::header exists \"Referer\"] } { \n        set referer [string range [HTTP::header \"Referer\"] 0 200] \n    } else  \n    { \n        set referer \"Not-Available\" \n    } \n    set tcp_start_time [clock clicks -milliseconds] \n    set pool_name [LB::server pool] \n    set event_timestamp  [clock format [clock seconds] -format \"%Y/%m/%d %H:%M:%S\"] \n} \nwhen HTTP_RESPONSE { \n    set node [IP::server_addr] \n    set node_port [TCP::server_port] \n    set http_status [HTTP::status] \n    set response_time [expr {[clock clicks -milliseconds] - $tcp_start_time}] \n    set hsl [HSL::open -proto TCP -pool /Common/Shared/telemetry] \n    set event_source \"HTTP_logging\" \n    HSL::send $hsl "event_source=\\"$event_source\\",event_timestamp=\\"$event_timestamp\\",client_ip=\\"$client_ip\\",vip=\\"$vip\\",vip_port=\\"$vip_port\\",http_method=\\"$http_method\\",http_host=\\"$http_host\\",http_path=\\"$http_path\\",user_agent=\\"$user_agent\\",referer=\\"$referer\\",pool_name=\\"$pool_name\\",node=\\"$node\\",node_port=\\"$node_port\\",http_status=\\"$http_status\\",response_time=\\"$response_time\\"\\r\\n"  \n} \n
when LB_FAILED { \n} \n



when CLIENT_ACCEPTED {\n    set client_ip [IP::client_addr] \n    set vip [IP::local_addr] \n    set vip_port [TCP::local_port] \n} \nwhen HTTP_REQUEST { \n    set http_host [HTTP::host] \n    set http_path [string range [HTTP::path] 0 400] \n    set http_method [HTTP::method] \n    if { [HTTP::header exists \"User-Agent\"] } { \n        set user_agent [string range [HTTP::header \"User-Agent\"] 0 200] \n    } else  \n    { \n        set user_agent \"Not-Available\" \n    }   \n    if { [HTTP::header exists \"Referer\"] } { \n        set referer [string range [HTTP::header \"Referer\"] 0 200] \n    } else  \n    { \n        set referer \"Not-Available\" \n    } \n    set tcp_start_time [clock clicks -milliseconds] \n    set pool_name [LB::server pool] \n    set event_timestamp  [clock format [clock seconds] -format \"%Y/%m/%d %H:%M:%S\"] \n} \n
when HTTP_RESPONSE { \n    set node [IP::server_addr] \n    set node_port [TCP::server_port] \n    set http_status [HTTP::status] \n    set response_time [expr {[clock clicks -milliseconds] - $tcp_start_time}] \n    set hsl [HSL::open -proto TCP -pool /Common/Shared/telemetry] \n    set event_source \"HTTP_logging\" \n    HSL::send $hsl "event_source=\\"$event_source\\",event_timestamp=\\"$event_timestamp\\",client_ip=\\"$client_ip\\",vip=\\"$vip\\",vip_port=\\"$vip_port\\",http_method=\\"$http_method\\",http_host=\\"$http_host\\",http_path=\\"$http_path\\",user_agent=\\"$user_agent\\",referer=\\"$referer\\",pool_name=\\"$pool_name\\",node=\\"$node\\",node_port=\\"$node_port\\",http_status=\\"$http_status\\",response_time=\\"$response_time\\"\\r\\n"  \n} \n
when LB_FAILED { \n} \n